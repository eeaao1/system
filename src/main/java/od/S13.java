package od;

/**
 * 题目描述
 * <p>
 * 寿司店周年庆，正在举办优惠活动回馈新老客户。
 * <p>
 * 寿司转盘上总共有 n 盘寿司，prices[i] 是第 i 盘寿司的价格，
 * <p>
 * 如果客户选择了第 i 盘寿司，寿司店免费赠送客户距离第 i 盘寿司最近的下一盘寿司 j，前提是 prices[j] < prices[i]，如果没有满足条件的 j，则不赠送寿司。
 * <p>
 * 每个价格的寿司都可无限供应。
 * <p>
 * 输入描述
 * 输入的每一个数字代表每盘寿司的价格，每盘寿司的价格之间使用空格分隔，例如:
 * <p>
 * 3 15 6 14
 * <p>
 * 表示：
 * <p>
 * 第 0 盘寿司价格 prices[0] 为 3
 * 第 1 盘寿司价格 prices[1] 为 15
 * 第 2 盘寿司价格 prices[2] 为 6
 * 第 3 盘寿司价格 prices[3] 为 14
 * 寿司的盘数 n 范围为：1 ≤ n ≤ 500
 * 每盘寿司的价格 price 范围为：1 ≤ price ≤ 1000
 * <p>
 * 输出描述
 * 输出享受优惠后的一组数据，每个值表示客户选择第 i 盘寿司时实际得到的寿司的总价格。使用空格进行分隔，例如：
 * <p>
 * 3 21 9 17
 * <p>
 * 用例
 * 输出
 * <p>
 * 3 21 9 17
 * <p>
 * 说明
 * <p>
 * 无
 * <p>
 * 用例解析
 * 根据题目的描述，客户选择了第 i 盘寿司，寿司店免费赠送距离第 i 盘寿司最近的下一盘寿司 j，且 prices[j] < prices[i]。如果没有满足条件的 j，则不赠送寿司。因此，对于每一盘寿司，我们需要找到其价格右侧第一个比它小的寿司的价格，并将其加到当前寿司的价格上。
 * <p>
 * 给定输入 3 15 6 14，我们来逐个分析：
 * <p>
 * 第 0 盘寿司价格为 3，没有比它更小的价格，所以输出为 3。
 * 第 1 盘寿司价格为 15，它右侧最近的更小价格是 6（第 2 盘寿司），所以输出为 15 + 6 = 21。
 * 第 2 盘寿司价格为 6，它右侧最近的更小价格是 3（第 0 盘寿司）， 所以 输出为 9。
 * 第 3 盘寿司价格为 14，它右侧最近的更小价格是 3（第 0 盘寿司）， 所以 输出为 17。
 * 综合以上，输出结果为 3 21 9 17。
 * <p>
 * 通过这个用例，可以得出数组是可以循环到头部继续寻找
 */
public class S13 {
    public static void main(String[] args) {

        String[] s1 = "3 15 6 14".split(" ");
        int[] s = new int[s1.length];
        for (int i = 0; i < s1.length; i++) {
            s[i] = Integer.valueOf(s1[i]);
        }
        ss(s);
    }


    public static void ss(int[] in) {
        int s = 0;
        boolean f = false;
        String rs = "";
        for (int i = 0; i < in.length; i++) {
            f = false;
            s = in[i];
            for (int j = i + 1; j < in.length; j++) {
                if (in[j] < s) {
                    s += in[j];
                    f = true;
                    break;
                }
            }
            if (!f && i > 0) {
                for (int j = 0; j < i; j++) {
                    if (in[j] < s) {
                        s += in[j];
                        break;
                    }
                }
            }

            if ("".equals(rs)) {
                rs += s;
            } else {
                rs += " " + s;
            }

        }
        System.out.println(rs);
    }
}
