<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.dao.mappers.UserBaseMapper">
  <resultMap id="BaseResultMap" type="biz.dao.mappers.entity.UserBase">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_PASSWORD" jdbcType="VARCHAR" property="userPassword" />
    <result column="LAST_TOKEN" jdbcType="VARCHAR" property="lastToken" />
    <result column="LAST_ACCESS_TIEM" jdbcType="TIMESTAMP" property="lastAccessTiem" />
    <result column="PROVIDE_TOKEN_TIEM" jdbcType="TIMESTAMP" property="provideTokenTiem" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    USER_ID, USER_NAME, USER_PASSWORD, LAST_TOKEN, LAST_ACCESS_TIEM, PROVIDE_TOKEN_TIEM, 
    UPDATE_TIME, CREATE_TIME
  </sql>
  <sql id="Insert_Column_List">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    #{record.userId,jdbcType=VARCHAR}, #{record.userName,jdbcType=VARCHAR}, #{record.userPassword,jdbcType=VARCHAR}, 
    #{record.lastToken,jdbcType=VARCHAR}, #{record.lastAccessTiem,jdbcType=TIMESTAMP}, 
    #{record.provideTokenTiem,jdbcType=TIMESTAMP}, #{record.updateTime,jdbcType=TIMESTAMP}, 
    #{record.createTime,jdbcType=TIMESTAMP}
  </sql>
  <select id="selectByExample" parameterType="biz.dao.mappers.entity.UserBaseExample" resultMap="BaseResultMap">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER_BASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithPage" resultMap="BaseResultMap">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER_BASE
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="biz.dao.mappers.entity.UserBaseExample">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    delete from USER_BASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="biz.dao.mappers.entity.UserBase">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    insert into USER_BASE (USER_ID, USER_NAME, USER_PASSWORD, 
      LAST_TOKEN, LAST_ACCESS_TIEM, PROVIDE_TOKEN_TIEM, 
      UPDATE_TIME, CREATE_TIME)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{lastToken,jdbcType=VARCHAR}, #{lastAccessTiem,jdbcType=TIMESTAMP}, #{provideTokenTiem,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="biz.dao.mappers.entity.UserBase">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    insert into USER_BASE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userPassword != null">
        USER_PASSWORD,
      </if>
      <if test="lastToken != null">
        LAST_TOKEN,
      </if>
      <if test="lastAccessTiem != null">
        LAST_ACCESS_TIEM,
      </if>
      <if test="provideTokenTiem != null">
        PROVIDE_TOKEN_TIEM,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="lastToken != null">
        #{lastToken,jdbcType=VARCHAR},
      </if>
      <if test="lastAccessTiem != null">
        #{lastAccessTiem,jdbcType=TIMESTAMP},
      </if>
      <if test="provideTokenTiem != null">
        #{provideTokenTiem,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    <choose>
      <when test="${getDBType} == 'Mysql' or ${getDBType} == 'OceanBase'">
        insert into USER_BASE
        (<include refid="Base_Column_List" />)
        values
        <foreach collection="records" item="record" separator=",">
          (<include refid="Insert_Column_List" />)
        </foreach>
      </when>
      <otherwise>
        insert all
        <foreach collection="records" item="record">
          into USER_BASE
          (<include refid="Base_Column_List" />)
          values
          (<include refid="Insert_Column_List" />)
        </foreach>
        select 1 from dual
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="biz.dao.mappers.entity.UserBaseExample" resultType="java.lang.Long">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    select count(*) from USER_BASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    update USER_BASE
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        USER_PASSWORD = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.lastToken != null">
        LAST_TOKEN = #{record.lastToken,jdbcType=VARCHAR},
      </if>
      <if test="record.lastAccessTiem != null">
        LAST_ACCESS_TIEM = #{record.lastAccessTiem,jdbcType=TIMESTAMP},
      </if>
      <if test="record.provideTokenTiem != null">
        PROVIDE_TOKEN_TIEM = #{record.provideTokenTiem,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - 
      这是工具生成代码，禁止手工修改
    -->
    update USER_BASE
    set USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      USER_PASSWORD = #{record.userPassword,jdbcType=VARCHAR},
      LAST_TOKEN = #{record.lastToken,jdbcType=VARCHAR},
      LAST_ACCESS_TIEM = #{record.lastAccessTiem,jdbcType=TIMESTAMP},
      PROVIDE_TOKEN_TIEM = #{record.provideTokenTiem,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>